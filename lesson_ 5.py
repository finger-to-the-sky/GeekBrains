# Решение задачи №1:

def odd_nums(n):
    # Создаем цикл с использованием аргумента функции
    for i in range(1,n+1,2):
        # Далее генерируем данные с помощью Yield
        yield i

for i in odd_nums(15):
    print(i)

# Решение задачи №3:
tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена','Имя'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б'
]
# Создадим кортеж и задаем ему условия элемента будущего цикла
result = ((tutors[i], None)
            # Создаем условие согласно заданию
            if i>= len(klasses)
            else (tutors[i], klasses[i])
            # далее создаем цикл который будет генерировать списки
            for i in range(len(tutors)))

print(type(result),*result)


# Решение задачи №4:
src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# Создаем список для внесения в него результата
result = []
# Далее цикл по длине спика
for i in range(len(src) - 1):
    # Cоздаем переменные которые будут использоваться как счетчик
    num1 = src[i]
    i += 1
    num2 = src[i]
    # Добавление условия для того чтобы в список результат вносились данные согласно заданию
    if num2 > num1:
        result.append(num2)
print(result)
# Решение задачи №5:
num_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# Организовываем цикл внутри цикла для того чтобы условия выполнялись до тех пор пока не удалятся все элементы
for i in num_list:
    for j in num_list:
        # Добавляем условия с числами которые необходимо удалить
        if j == 2:
            # И удаляем нужный элемент из списка
            num_list.remove(2)
        elif j == 7:
            num_list.remove(7)
        elif j == 44:
            num_list.remove(44)
print(num_list)


